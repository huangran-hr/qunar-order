server:
  port: 8080

# #使用apollo配置中心 (如果使用，apollo中的key需要写成 spring.application.name 这种格式，所有配置只需要在apollo配置中心配好就行了，此文件中相应的配置可以直接注释掉)
# apollo:
#   # meta: http://apollo-pro.mvmyun.com 本地启动使用VM arguments吧 -Dapollo.configService=http://apollo-dev.mvmyun.com -Denv=DEV
#   bootstrap:
#     enabled: true
#     namespaces: application
#     eagerLoad:
#       enabled: true
#   cluster: default
#   autoUpdateInjectedSpringProperties: true

spring:
  application:
    name: qunar-order
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.1.43:3306/room_orders_dev?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai
    username: dev_member
    password: dev123456
  #时区
  jackson:
    timeZone: Asia/Shanghai

  kafka:
    bootstrap-servers: 192.168.11.11:31090,192.168.11.12:31090,192.168.11.13:31090
    consumer:
      #是否自动提交offset偏移量(默认true)
      enable-auto-commit: true
      #自动提交的频率(ms)
      auto-commit-interval: 100
      #键的反序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #值的反序列化方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #offset偏移量规则设置
      auto-offset-reset: earliest
    producer:
      #重试次数，0为不启用重试机制
      retries: 3
      #acks=0 把消息发送到kafka就认为发送成功,acks=1 把消息发送到kafka leader分区，并且写入磁盘就认为发送成功,acks=all 把消息发送到kafka leader分区，并且leader分区的副本follower对消息进行了同步就任务发送成功
      acks: 1
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: com.sjlh.hotel.order.serialization.JacksonSerialization


app:
  id: qunar-order
info:
  app:
    name: qunar-order
    version: 0.0.1.SNAPSHOT

# eureka:
#   instance:
#     registry:
#     hostname: localhost
#   client:
#     enabled: true
#     registerWithEureka: true
#     serviceUrl:
#       defaultZone: http://192.168.1.110:8761/eureka/
# #      defaultZone: http://apollo-dev.mvmyun.com/
#     healthcheck:
#       enabled: true

com:
  sjlh:
    web:
      log:
        enabled: true
        appender:
          type: url

#qunar配置
qunar:
  query-order-list-target: /api/ota/otaQueryOrder
  opt-order-target: /api/ota/otaOpt
  sign-key: FAnAAWGU6OALizbu5Zz4nJXHXd9tH6Ij

# mvm-drp-crs url
crs:
  protocol: https
  host: mvm-drp-crs-dev.mvmyun.com/crs/order/

hotel-qunar-api-name: hotel-qunar-api
hotel-qunar-api-url: hotel-qunar-api

#健康检查
management:
  endpoints:
    web:
      exposure:
        include: "*"
